
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b"\xa2\xd2\x95 \xact\x1fa$'5\xa8\xf7\xed\xe5\x04"
    
_lr_action_items = {'NOT':([83,136,144,162,164,165,177,200,201,241,293,],[121,121,121,121,-157,-157,121,-155,-156,121,121,]),'MENQUE':([82,86,88,89,90,97,102,110,122,124,128,130,132,133,138,145,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,172,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'PRIVATE':([43,189,223,],[49,-43,49,]),'CONFLO':([54,56,66,72,82,83,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,111,121,126,127,129,130,132,133,136,138,141,142,144,145,147,150,155,156,157,158,159,162,164,165,168,170,171,172,173,174,175,177,180,182,183,187,188,190,191,192,195,196,197,198,200,201,204,205,206,207,208,209,216,220,221,241,246,247,248,250,251,252,254,273,274,279,286,288,289,291,293,294,295,297,299,300,302,305,308,],[-33,-36,-37,86,-109,-92,-32,-69,-124,-110,-128,-128,-31,86,86,-125,86,-54,-121,-68,-70,-28,-30,-29,-123,-92,-92,86,-93,-91,-119,-126,-127,-92,-122,-80,-22,-92,-120,-55,86,-150,-150,-52,-87,-87,-92,-157,-157,-92,-145,-145,-145,-145,-145,-145,-92,-111,-92,-113,-82,-92,86,86,86,-92,-92,-92,-92,-155,-156,-92,-92,-92,-92,-92,-92,-80,-92,-79,-92,-92,-117,-114,-92,-92,-56,-53,-66,-59,-81,-77,-62,-64,-112,-92,-73,-74,-118,-71,-66,-63,-92,-78,]),'STRING':([6,7,8,10,23,38,45,49,50,52,58,60,61,114,119,148,152,],[-3,-3,12,-2,12,-47,12,-41,-41,12,12,-40,-39,-21,12,-11,12,]),'ENDVAR':([38,45,189,223,],[-47,55,-43,257,]),'FALSE':([54,56,66,72,82,83,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,111,121,126,127,129,130,132,133,136,138,141,142,144,145,147,150,155,156,157,158,159,162,164,165,168,170,171,172,173,174,175,177,180,182,183,187,188,190,191,192,195,196,197,198,200,201,204,205,206,207,208,209,216,220,221,241,246,247,248,250,251,252,254,273,274,279,286,288,289,291,293,294,295,297,299,300,302,305,308,],[-33,-36,-37,90,-109,-92,-32,-69,-124,-110,-128,-128,-31,90,90,-125,90,-54,-121,-68,-70,-28,-30,-29,-123,-92,-92,90,-93,-91,-119,-126,-127,-92,-122,-80,-22,-92,-120,-55,90,-150,-150,-52,-87,-87,-92,-157,-157,-92,-145,-145,-145,-145,-145,-145,-92,-111,-92,-113,-82,-92,90,90,90,-92,-92,-92,-92,-155,-156,-92,-92,-92,-92,-92,-92,-80,-92,-79,-92,-92,-117,-114,-92,-92,-56,-53,-66,-59,-81,-77,-62,-64,-112,-92,-73,-74,-118,-71,-66,-63,-92,-78,]),'ELSE':([142,273,],[-22,287,]),'FLOAT':([6,7,8,10,23,38,45,49,50,52,58,60,61,114,119,148,152,],[-3,-3,11,-2,11,-47,11,-41,-41,11,11,-40,-39,-21,11,-11,11,]),'$end':([1,41,],[0,-1,]),'POR':([82,86,88,89,90,97,102,110,124,130,132,133,138,145,166,167,180,187,202,216,221,230,231,233,234,247,248,260,261,264,279,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,158,-119,-126,-127,-122,-120,-90,-54,-111,-82,-80,-80,-79,-88,-88,-113,-94,-117,-114,158,158,-89,-81,-112,-118,]),'DIFERE':([82,86,88,89,90,97,102,110,122,124,128,130,132,133,138,145,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,170,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'RETURN':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,83,-109,-32,-69,-124,-110,-128,-128,-31,83,83,-125,83,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,83,-52,-111,-113,-82,83,83,83,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'PRINT':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,107,-109,-32,-69,-124,-110,-128,-128,-31,107,107,-125,107,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,107,-52,-111,-113,-82,107,107,107,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'OBJECT':([6,7,114,148,],[9,9,-21,-11,]),'PUBLIC':([43,189,223,],[50,-43,50,]),'MAS':([82,86,88,89,90,97,102,110,122,124,130,132,133,138,145,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,155,-86,-119,-126,-127,-122,-120,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,155,155,-86,-86,-89,-81,-84,-85,-112,-118,]),'RPAREN':([42,44,58,69,81,82,86,88,89,90,97,102,110,120,122,124,125,128,130,132,133,138,144,145,151,152,153,154,160,161,163,166,167,169,178,179,180,185,186,187,194,199,202,203,211,214,215,216,217,221,228,229,230,231,232,233,234,235,236,237,238,239,240,244,247,248,249,258,259,260,261,262,263,264,265,266,267,268,269,270,271,275,277,279,281,282,283,284,290,291,292,297,306,],[48,53,-99,80,-100,-109,-124,-110,-128,-128,-125,-121,-123,-102,-149,-86,-153,-144,-119,-126,-127,-122,-58,-120,-98,-99,-136,-146,-83,-152,-151,-90,-54,-137,212,-80,-111,219,-57,-82,-101,-88,-80,234,242,245,-60,-80,-116,-79,-88,-88,-88,-88,-159,-113,-94,-88,-88,-88,-88,-88,-88,-61,-117,-114,276,-149,-149,-86,-86,-158,-154,-89,-140,-139,-138,-141,-143,-142,285,-116,-116,-81,-147,-148,-84,-85,297,-112,-115,-118,307,]),'MAIN':([15,17,24,25,35,54,56,66,118,227,],[-4,-6,34,-6,-5,-33,-36,-37,-95,-103,]),'IGUIGU':([82,86,88,89,90,97,102,110,122,124,128,130,132,133,138,145,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,174,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'TRUE':([54,56,66,72,82,83,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,111,121,126,127,129,130,132,133,136,138,141,142,144,145,147,150,155,156,157,158,159,162,164,165,168,170,171,172,173,174,175,177,180,182,183,187,188,190,191,192,195,196,197,198,200,201,204,205,206,207,208,209,216,220,221,241,246,247,248,250,251,252,254,273,274,279,286,288,289,291,293,294,295,297,299,300,302,305,308,],[-33,-36,-37,89,-109,-92,-32,-69,-124,-110,-128,-128,-31,89,89,-125,89,-54,-121,-68,-70,-28,-30,-29,-123,-92,-92,89,-93,-91,-119,-126,-127,-92,-122,-80,-22,-92,-120,-55,89,-150,-150,-52,-87,-87,-92,-157,-157,-92,-145,-145,-145,-145,-145,-145,-92,-111,-92,-113,-82,-92,89,89,89,-92,-92,-92,-92,-155,-156,-92,-92,-92,-92,-92,-92,-80,-92,-79,-92,-92,-117,-114,-92,-92,-56,-53,-66,-59,-81,-77,-62,-64,-112,-92,-73,-74,-118,-71,-66,-63,-92,-78,]),'RBRACK':([33,51,54,56,63,64,66,71,72,74,75,76,77,82,84,85,86,88,89,90,91,92,95,96,97,99,100,101,102,103,104,106,108,109,110,113,115,118,130,132,133,134,137,138,140,141,142,145,150,157,180,183,187,189,190,191,192,193,216,221,223,224,225,226,227,247,248,252,254,255,256,273,274,279,280,286,288,289,291,294,295,297,299,300,302,308,],[41,-18,-33,-36,-20,-15,-37,-9,-24,-17,-20,114,-15,-109,-32,-69,-124,-110,-128,-128,-31,-24,-23,-24,-125,-24,-54,142,-121,-68,-70,-28,-30,-29,-123,-19,-14,-95,-119,-126,-127,-26,-25,-122,-27,-80,-22,-120,-107,-52,-111,-113,-82,-43,-107,-107,-107,227,-80,-79,-46,-105,-104,-106,-103,-117,-114,-56,-53,-38,-44,-66,-59,-81,-45,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'MAYQUE':([82,86,88,89,90,97,102,110,122,124,128,130,132,133,138,145,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,171,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'VOID':([23,],[30,]),'CONSTR':([54,56,66,72,82,83,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,111,121,126,127,129,130,132,133,136,138,141,142,144,145,147,150,155,156,157,158,159,162,164,165,168,170,171,172,173,174,175,177,180,182,183,187,188,190,191,192,195,196,197,198,200,201,204,205,206,207,208,209,216,220,221,241,246,247,248,250,251,252,254,273,274,279,286,288,289,291,293,294,295,297,299,300,302,305,308,],[-33,-36,-37,97,-109,-92,-32,-69,-124,-110,-128,-128,-31,97,97,-125,97,-54,-121,-68,-70,-28,-30,-29,-123,-92,-92,97,-93,-91,-119,-126,-127,-92,-122,-80,-22,-92,-120,-55,97,-150,-150,-52,-87,-87,-92,-157,-157,-92,-145,-145,-145,-145,-145,-145,-92,-111,-92,-113,-82,-92,97,97,97,-92,-92,-92,-92,-155,-156,-92,-92,-92,-92,-92,-92,-80,-92,-79,-92,-92,-117,-114,-92,-92,-56,-53,-66,-59,-81,-77,-62,-64,-112,-92,-73,-74,-118,-71,-66,-63,-92,-78,]),'WHILE':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,176,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,93,-109,-32,-69,-124,-110,-128,-128,-31,93,93,-125,93,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,93,-52,210,-111,-113,-82,93,93,93,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'READ':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,98,-109,-32,-69,-124,-110,-128,-128,-31,98,98,-125,98,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,98,-52,-111,-113,-82,98,98,98,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'FUNC':([15,17,25,51,54,56,63,64,66,74,75,77,113,118,189,223,227,254,255,256,280,],[-4,23,23,-18,-33,-36,-20,23,-37,-17,-20,23,-19,-95,-43,-46,-103,-53,-38,-44,-45,]),'IDENTI':([2,6,7,8,9,10,11,12,13,14,16,18,19,21,30,31,32,37,38,45,49,50,51,52,54,56,60,61,63,65,66,70,72,75,82,83,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,111,114,119,121,126,127,129,130,132,133,136,138,139,141,142,143,144,145,147,148,150,155,156,157,158,159,162,164,165,168,170,171,172,173,174,175,177,180,181,182,183,187,188,189,190,191,192,195,196,197,198,200,201,204,205,206,207,208,209,213,216,220,221,223,241,246,247,248,250,251,252,254,255,256,273,274,279,280,286,288,289,291,293,294,295,297,299,300,301,302,305,308,],[3,-3,-3,13,20,-2,-133,-134,-131,22,-132,-135,-129,-130,-97,40,-96,44,-47,13,-41,-41,62,13,-33,-36,-40,-39,62,78,-37,81,100,62,-109,-92,-32,-69,-124,-110,-128,-128,-31,100,100,-125,100,-54,-121,-68,-70,-28,-30,-29,-123,-92,-21,13,-92,167,-93,-91,-119,-126,-127,-92,-122,179,-80,-22,184,-92,-120,-55,-11,100,-150,-150,-52,-87,-87,-92,-157,-157,-92,-145,-145,-145,-145,-145,-145,-92,-111,216,-92,-113,-82,-92,-43,100,100,100,-92,-92,-92,-92,-155,-156,-92,-92,-92,-92,-92,-92,244,-80,-92,-79,-46,-92,-92,-117,-114,-92,-92,-56,-53,-38,-44,-66,-59,-81,-45,-77,-62,-64,-112,-92,-73,-74,-118,-71,-66,303,-63,-92,-78,]),'CONINT':([29,54,56,66,67,72,82,83,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,111,121,126,127,129,130,132,133,136,138,141,142,144,145,147,150,155,156,157,158,159,162,164,165,168,170,171,172,173,174,175,177,180,182,183,187,188,190,191,192,195,196,197,198,200,201,204,205,206,207,208,209,216,220,221,241,246,247,248,250,251,252,254,273,274,279,286,288,289,291,293,294,295,297,299,300,302,305,308,],[39,-33,-36,-37,79,110,-109,-92,-32,-69,-124,-110,-128,-128,-31,110,110,-125,110,-54,-121,-68,-70,-28,-30,-29,-123,-92,-92,110,-93,-91,-119,-126,-127,-92,-122,-80,-22,-92,-120,-55,110,-150,-150,-52,-87,-87,-92,-157,-157,-92,-145,-145,-145,-145,-145,-145,-92,-111,-92,-113,-82,-92,110,110,110,-92,-92,-92,-92,-155,-156,-92,-92,-92,-92,-92,-92,-80,-92,-79,-92,-92,-117,-114,-92,-92,-56,-53,-66,-59,-81,-77,-62,-64,-112,-92,-73,-74,-118,-71,-66,-63,-92,-78,]),'OR':([82,86,88,89,90,97,102,110,122,124,125,128,130,132,133,138,145,153,154,160,166,167,169,180,187,199,202,216,221,228,229,230,231,232,233,234,235,236,237,238,239,240,247,248,258,259,260,261,264,265,266,267,268,269,270,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,165,-144,-119,-126,-127,-122,-120,-136,-146,-83,-90,-54,-137,-111,-82,-88,-80,-80,-79,-88,-88,-88,-88,165,-113,-94,-88,-88,-88,-88,-88,-88,-117,-114,-149,-149,-86,-86,-89,-140,-139,-138,-141,-143,-142,-81,-147,-148,-84,-85,-112,-118,]),'LBRACK':([3,4,5,20,26,36,48,53,59,80,87,131,212,242,243,272,287,296,307,],[-7,-8,6,-16,-13,43,-10,-12,72,119,-72,72,-65,-76,72,72,-67,72,72,]),'AND':([82,86,88,89,90,97,102,110,122,124,125,128,130,132,133,138,145,153,154,160,166,167,169,180,187,199,202,216,221,228,229,230,231,232,233,234,235,236,237,238,239,240,247,248,258,259,260,261,264,265,266,267,268,269,270,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,164,-144,-119,-126,-127,-122,-120,-136,-146,-83,-90,-54,-137,-111,-82,-88,-80,-80,-79,-88,-88,-88,-88,164,-113,-94,-88,-88,-88,-88,-88,-88,-117,-114,-149,-149,-86,-86,-89,-140,-139,-138,-141,-143,-142,-81,-147,-148,-84,-85,-112,-118,]),'SEMCOL':([22,27,28,55,57,68,78,81,82,86,88,89,90,97,102,110,116,117,120,122,123,124,125,128,130,132,133,138,145,149,153,154,160,161,163,166,167,169,180,187,199,202,216,219,221,222,228,229,230,231,232,233,234,235,236,237,238,239,240,245,247,248,257,258,259,260,261,262,263,264,265,266,267,268,269,270,276,278,279,281,282,283,284,285,291,297,298,],[-35,38,-34,66,-51,-48,-35,-100,-109,-124,-110,-128,-128,-125,-121,-123,-42,-50,152,-149,157,-86,-153,-144,-119,-126,-127,-122,-120,189,-136,-146,-83,-152,-151,-90,-54,-137,-111,-82,-88,-80,-80,252,-79,254,-88,-88,-88,-88,-159,-113,-94,-88,-88,-88,-88,-88,-88,274,-117,-114,280,-149,-149,-86,-86,-158,-154,-89,-140,-139,-138,-141,-143,-142,291,293,-81,-147,-148,-84,-85,294,-112,-118,301,]),'LCORCH':([22,57,62,73,78,100,141,167,179,184,187,202,216,303,],[29,67,-54,111,29,-54,111,-54,111,111,220,111,111,111,]),'INT':([6,7,8,10,23,38,45,49,50,52,58,60,61,114,119,148,152,],[-3,-3,16,-2,16,-47,16,-41,-41,16,16,-40,-39,-21,16,-11,16,]),'DO':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,87,-109,-32,-69,-124,-110,-128,-128,-31,87,87,-125,87,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,87,-52,-111,-113,-82,87,87,87,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'PUNTO':([100,141,167,179,202,],[-54,181,-54,213,181,]),'FOR':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,105,-109,-32,-69,-124,-110,-128,-128,-31,105,105,-125,105,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,105,-52,-111,-113,-82,105,105,105,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),'RCORCH':([39,46,79,82,86,88,89,90,97,102,110,122,124,130,132,133,138,145,146,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,253,258,259,260,261,264,279,281,282,283,284,291,297,],[-49,57,117,-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,-119,-126,-127,-122,-120,187,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,279,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'MENIGU':([82,86,88,89,90,97,102,110,122,124,128,130,132,133,138,145,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,173,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'IGUAL':([62,73,100,112,141,183,184,187,218,221,279,303,304,],[-54,-80,-54,147,-80,147,-80,-82,251,-79,-81,-80,305,]),'MAYIGU':([82,86,88,89,90,97,102,110,122,124,128,130,132,133,138,145,154,160,166,167,180,187,202,216,221,228,229,230,231,233,234,247,248,258,259,260,261,264,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,175,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,-81,-147,-148,-84,-85,-112,-118,]),'LPAREN':([20,26,34,40,47,83,93,94,98,100,105,107,111,121,127,135,136,141,144,147,155,156,158,159,162,164,165,167,168,170,171,172,173,174,175,177,182,188,195,196,197,198,200,201,202,204,205,206,207,208,209,210,216,220,241,246,250,251,293,305,],[-16,37,42,-108,58,127,-75,136,139,-54,143,144,127,127,-93,177,127,182,127,-55,-150,-150,-87,-87,127,-157,-157,-54,127,-145,-145,-145,-145,-145,-145,127,127,127,127,127,127,127,-155,-156,182,127,127,127,127,127,127,241,246,127,127,127,127,127,127,127,]),'DIVISI':([82,86,88,89,90,97,102,110,124,130,132,133,138,145,166,167,180,187,202,216,221,230,231,233,234,247,248,260,261,264,279,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,159,-119,-126,-127,-122,-120,-90,-54,-111,-82,-80,-80,-79,-88,-88,-113,-94,-117,-114,159,159,-89,-81,-112,-118,]),'PROGRAM':([0,],[2,]),'COMMA':([82,86,88,89,90,97,102,110,122,124,130,132,133,138,145,154,160,166,167,180,187,202,216,217,221,228,229,230,231,233,234,247,248,258,259,260,261,264,275,277,279,281,282,283,284,291,297,],[-109,-124,-110,-128,-128,-125,-121,-123,-149,-86,-119,-126,-127,-122,-120,-146,-83,-90,-54,-111,-82,-80,-80,250,-79,-88,-88,-88,-88,-113,-94,-117,-114,-149,-149,-86,-86,-89,250,250,-81,-147,-148,-84,-85,-112,-118,]),'BOOL':([6,7,8,10,23,38,45,49,50,52,58,60,61,114,119,148,152,],[-3,-3,18,-2,18,-47,18,-41,-41,18,18,-40,-39,-21,18,-11,18,]),'MENOS':([82,83,86,88,89,90,97,102,110,111,121,122,124,127,130,132,133,136,138,144,145,147,155,156,158,159,160,162,164,165,166,167,168,170,171,172,173,174,175,177,180,182,187,188,195,196,197,198,200,201,202,204,205,206,207,208,209,216,220,221,228,229,230,231,233,234,241,246,247,248,250,251,258,259,260,261,264,279,283,284,291,293,297,305,],[-109,129,-124,-110,-128,-128,-125,-121,-123,129,129,156,-86,-93,-119,-126,-127,129,-122,129,-120,-55,-150,-150,-87,-87,-83,129,-157,-157,-90,-54,129,-145,-145,-145,-145,-145,-145,129,-111,129,-82,129,129,129,129,129,-155,-156,-80,129,129,129,129,129,129,-80,129,-79,-88,-88,-88,-88,-113,-94,129,129,-117,-114,129,129,156,156,-86,-86,-89,-81,-84,-85,-112,129,-118,129,]),'IF':([54,56,66,72,82,84,85,86,88,89,90,91,92,96,97,99,100,102,103,104,106,108,109,110,130,132,133,138,141,142,145,150,157,180,183,187,190,191,192,216,221,247,248,252,254,273,274,279,286,288,289,291,294,295,297,299,300,302,308,],[-33,-36,-37,94,-109,-32,-69,-124,-110,-128,-128,-31,94,94,-125,94,-54,-121,-68,-70,-28,-30,-29,-123,-119,-126,-127,-122,-80,-22,-120,94,-52,-111,-113,-82,94,94,94,-80,-79,-117,-114,-56,-53,-66,-59,-81,-77,-62,-64,-112,-73,-74,-118,-71,-66,-63,-78,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'otrasconst':([72,92,96,99,126,150,190,191,192,],[82,82,82,82,82,82,82,82,82,]),'foundComp':([170,171,172,173,174,175,],[204,205,206,207,208,209,]),'objvarsagain':([223,],[255,]),'doTermina':([294,],[299,]),'tamano':([22,78,],[28,28,]),'vartam':([22,78,],[27,116,]),'ciclo':([72,92,96,99,150,190,191,192,],[84,84,84,84,84,84,84,84,]),'whileGeneraFalso':([242,],[272,]),'objmet':([64,77,],[76,115,]),'logicos':([125,232,],[161,262,]),'cteid':([72,92,96,99,126,150,190,191,192,],[88,88,88,88,88,88,88,88,88,]),'foundNUMINT':([110,],[145,]),'andor':([125,232,],[162,162,]),'visibilidad':([43,223,],[52,52,]),'foundLP':([127,],[168,]),'masAsign':([63,75,],[74,113,]),'isobject':([13,],[21,]),'modulo':([17,25,64,77,],[25,25,77,77,]),'return':([72,92,96,99,150,190,191,192,],[92,92,92,92,190,190,190,190,]),'cuadInicial':([4,],[5,]),'lectura':([72,92,96,99,150,190,191,192,],[106,106,106,106,106,106,106,106,]),'compara':([128,],[169,]),'foundParam':([81,],[120,]),'objvars':([43,223,],[51,256,]),'insertVar':([38,],[45,]),'doMeteCont':([87,],[131,]),'estatuto':([72,92,96,99,150,190,191,192,],[96,96,96,96,191,191,191,191,]),'acabaIF':([273,300,],[289,302,]),'foundPLMI':([155,156,],[195,196,]),'tipos':([8,23,45,52,58,119,152,],[19,32,19,19,70,19,70,]),'modparams':([58,152,],[69,194,]),'dimobjcall':([216,],[248,]),'expre':([122,258,259,],[154,281,282,]),'metearr':([39,],[46,]),'condicion':([72,92,96,99,150,190,191,192,],[108,108,108,108,108,108,108,108,]),'genCuadMUDI':([199,228,229,230,231,235,236,237,238,239,240,],[232,258,259,260,261,265,266,267,268,269,270,]),'foundSTR':([97,],[138,]),'tipo':([8,45,52,119,],[14,14,65,14,]),'whileTermina':([286,],[295,]),'modtipo':([23,],[31,]),'expresion':([83,136,144,162,177,241,293,],[125,125,125,199,125,125,125,]),'foundObjID':([20,],[26,]),'dimension':([73,141,179,184,202,216,303,],[112,183,215,218,233,247,304,]),'progmod':([17,25,],[24,35,]),'vieneAsignacion':([51,],[64,]),'foundRP':([234,],[264,]),'exp':([83,111,121,136,144,162,168,177,182,188,204,205,206,207,208,209,220,241,246,250,251,293,305,],[128,146,153,128,128,128,203,128,217,222,235,236,237,238,239,240,253,128,275,277,278,128,306,]),'tieneelse':([273,],[288,]),'vars':([8,45,119,],[15,56,150,]),'funcdimobj':([141,202,],[180,180,]),'dowhile':([72,92,96,99,150,190,191,192,],[103,103,103,103,103,103,103,103,]),'foundID':([62,100,167,],[73,141,202,]),'asignacion':([51,63,72,75,92,96,99,150,190,191,192,],[63,75,109,75,109,109,109,109,109,109,109,]),'foundKeyword':([49,50,],[60,61,]),'foundEQ':([147,],[188,]),'termino':([83,111,121,136,144,162,168,177,182,188,195,196,204,205,206,207,208,209,220,241,246,250,251,293,305,],[122,122,122,122,122,122,122,122,122,122,228,229,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'foundNUMFLO':([86,],[130,]),'meteContWhile':([93,],[135,]),'for':([72,92,96,99,150,190,191,192,],[85,85,85,85,85,85,85,85,]),'progobj':([6,7,],[8,10,]),'foundMUDI':([158,159,],[197,198,]),'foundANDOR':([164,165,],[200,201,]),'mascall':([217,275,277,],[249,290,292,]),'genCuadIF':([212,],[243,]),'escritura':([72,92,96,99,150,190,191,192,],[91,91,91,91,91,91,91,91,]),'term':([124,260,261,],[160,283,284,]),'foundBOOL':([89,90,],[132,133,]),'insertObjVar':([116,],[149,]),'modbloque':([80,],[118,]),'herencia':([26,],[36,]),'semCreaMod':([40,],[47,]),'factor':([83,111,121,136,144,162,168,177,182,188,195,196,197,198,204,205,206,207,208,209,220,241,246,250,251,293,305,],[124,124,124,124,124,124,124,124,124,124,124,124,230,231,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'acabaOBJ':([114,],[148,]),'delVis':([189,],[223,]),'masmodparams':([120,],[151,]),'progvars':([8,],[17,]),'estret':([72,92,96,99,],[95,95,95,95,]),'superexpresion':([83,136,144,177,241,293,],[123,178,186,211,271,298,]),'maslogicos':([232,],[263,]),'superexp':([125,],[163,]),'semCreaDP':([3,],[4,]),'prntparam':([144,],[185,]),'tammatriz':([57,],[68,]),'objeto':([6,7,],[7,7,]),'varcte':([72,92,96,99,126,150,190,191,192,],[99,99,99,99,166,192,192,192,192,]),'bloque':([59,131,243,272,296,307,],[71,176,273,286,300,308,]),'menunario':([83,111,121,136,144,162,168,177,182,188,195,196,197,198,204,205,206,207,208,209,220,241,246,250,251,293,305,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'bloq':([72,92,96,99,],[101,134,137,140,]),'program':([0,],[1,]),'conbol':([72,92,96,99,126,150,190,191,192,],[102,102,102,102,102,102,102,102,102,]),'main':([24,],[33,]),'while':([72,92,96,99,150,190,191,192,],[104,104,104,104,104,104,104,104,]),'genCuadElse':([287,],[296,]),'iniciaMain':([48,],[59,]),'varsagain':([45,],[54,]),'dimobj':([179,],[214,]),'modbloq':([150,190,191,192,],[193,224,225,226,]),'matriz':([187,],[221,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM IDENTI semCreaDP cuadInicial LBRACK progobj progvars progmod main RBRACK','program',10,'p_program','marfle_yacc.py',109),
  ('progobj -> objeto progobj','progobj',2,'p_progobj','marfle_yacc.py',113),
  ('progobj -> <empty>','progobj',0,'p_progobj','marfle_yacc.py',114),
  ('progvars -> vars','progvars',1,'p_progvars','marfle_yacc.py',117),
  ('progmod -> modulo progmod','progmod',2,'p_progmod','marfle_yacc.py',120),
  ('progmod -> <empty>','progmod',0,'p_progmod','marfle_yacc.py',121),
  ('semCreaDP -> <empty>','semCreaDP',0,'p_semCreaDP','marfle_yacc.py',125),
  ('cuadInicial -> <empty>','cuadInicial',0,'p_cuadInicial','marfle_yacc.py',133),
  ('main -> MAIN LPAREN RPAREN iniciaMain bloque','main',5,'p_main','marfle_yacc.py',140),
  ('iniciaMain -> <empty>','iniciaMain',0,'p_iniciaMain','marfle_yacc.py',143),
  ('objeto -> OBJECT IDENTI foundObjID herencia LBRACK objvars vieneAsignacion objmet RBRACK acabaOBJ','objeto',10,'p_objeto','marfle_yacc.py',150),
  ('herencia -> LPAREN IDENTI RPAREN','herencia',3,'p_herencia','marfle_yacc.py',153),
  ('herencia -> <empty>','herencia',0,'p_herencia','marfle_yacc.py',154),
  ('objmet -> modulo objmet','objmet',2,'p_objmet','marfle_yacc.py',157),
  ('objmet -> <empty>','objmet',0,'p_objmet','marfle_yacc.py',158),
  ('foundObjID -> <empty>','foundObjID',0,'p_foundObjID','marfle_yacc.py',161),
  ('vieneAsignacion -> asignacion masAsign','vieneAsignacion',2,'p_vieneAsignacion','marfle_yacc.py',167),
  ('vieneAsignacion -> <empty>','vieneAsignacion',0,'p_vieneAsignacion','marfle_yacc.py',168),
  ('masAsign -> asignacion masAsign','masAsign',2,'p_masAsign','marfle_yacc.py',171),
  ('masAsign -> <empty>','masAsign',0,'p_masAsign','marfle_yacc.py',172),
  ('acabaOBJ -> <empty>','acabaOBJ',0,'p_acabaOBJ','marfle_yacc.py',175),
  ('bloque -> LBRACK bloq RBRACK','bloque',3,'p_bloque','marfle_yacc.py',182),
  ('bloq -> estret','bloq',1,'p_bloq','marfle_yacc.py',185),
  ('bloq -> <empty>','bloq',0,'p_bloq','marfle_yacc.py',186),
  ('estret -> estatuto bloq','estret',2,'p_estret','marfle_yacc.py',189),
  ('estret -> return bloq','estret',2,'p_estret','marfle_yacc.py',190),
  ('estret -> varcte bloq','estret',2,'p_estret','marfle_yacc.py',191),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','marfle_yacc.py',195),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','marfle_yacc.py',196),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','marfle_yacc.py',197),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','marfle_yacc.py',198),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','marfle_yacc.py',199),
  ('vars -> tipo IDENTI vartam SEMCOL insertVar varsagain','vars',6,'p_vars','marfle_yacc.py',204),
  ('vartam -> tamano','vartam',1,'p_vartam','marfle_yacc.py',208),
  ('vartam -> <empty>','vartam',0,'p_vartam','marfle_yacc.py',209),
  ('varsagain -> vars','varsagain',1,'p_varsagain','marfle_yacc.py',212),
  ('varsagain -> ENDVAR SEMCOL','varsagain',2,'p_varsagain','marfle_yacc.py',213),
  ('objvars -> visibilidad tipo IDENTI vartam insertObjVar SEMCOL delVis objvarsagain','objvars',8,'p_objvars','marfle_yacc.py',216),
  ('visibilidad -> PUBLIC foundKeyword','visibilidad',2,'p_visibilidad','marfle_yacc.py',219),
  ('visibilidad -> PRIVATE foundKeyword','visibilidad',2,'p_visibilidad','marfle_yacc.py',220),
  ('foundKeyword -> <empty>','foundKeyword',0,'p_foundKeyword','marfle_yacc.py',223),
  ('insertObjVar -> <empty>','insertObjVar',0,'p_insertObjVar','marfle_yacc.py',228),
  ('delVis -> <empty>','delVis',0,'p_delVis','marfle_yacc.py',234),
  ('objvarsagain -> objvars','objvarsagain',1,'p_objvarsagain','marfle_yacc.py',239),
  ('objvarsagain -> ENDVAR SEMCOL','objvarsagain',2,'p_objvarsagain','marfle_yacc.py',240),
  ('objvarsagain -> <empty>','objvarsagain',0,'p_objvarsagain','marfle_yacc.py',241),
  ('insertVar -> <empty>','insertVar',0,'p_insertVar','marfle_yacc.py',244),
  ('tamano -> LCORCH CONINT metearr RCORCH tammatriz','tamano',5,'p_tamano','marfle_yacc.py',265),
  ('metearr -> <empty>','metearr',0,'p_metearr','marfle_yacc.py',271),
  ('tammatriz -> LCORCH CONINT RCORCH','tammatriz',3,'p_tammatriz','marfle_yacc.py',277),
  ('tammatriz -> <empty>','tammatriz',0,'p_tammatriz','marfle_yacc.py',278),
  ('return -> RETURN superexpresion SEMCOL','return',3,'p_return','marfle_yacc.py',286),
  ('asignacion -> IDENTI foundID dimension IGUAL foundEQ exp SEMCOL','asignacion',7,'p_asignacion','marfle_yacc.py',295),
  ('foundID -> <empty>','foundID',0,'p_foundID','marfle_yacc.py',309),
  ('foundEQ -> <empty>','foundEQ',0,'p_foundEQ','marfle_yacc.py',333),
  ('escritura -> PRINT LPAREN prntparam RPAREN SEMCOL','escritura',5,'p_escritura','marfle_yacc.py',338),
  ('prntparam -> superexpresion','prntparam',1,'p_prntparam','marfle_yacc.py',347),
  ('prntparam -> <empty>','prntparam',0,'p_prntparam','marfle_yacc.py',348),
  ('lectura -> READ LPAREN IDENTI dimobj RPAREN SEMCOL','lectura',6,'p_lectura','marfle_yacc.py',352),
  ('dimobj -> dimension','dimobj',1,'p_dimobj','marfle_yacc.py',355),
  ('dimobj -> PUNTO IDENTI','dimobj',2,'p_dimobj','marfle_yacc.py',356),
  ('condicion -> IF LPAREN superexpresion RPAREN genCuadIF bloque tieneelse','condicion',7,'p_condicion','marfle_yacc.py',360),
  ('tieneelse -> ELSE genCuadElse bloque acabaIF','tieneelse',4,'p_tieneelse','marfle_yacc.py',363),
  ('tieneelse -> acabaIF','tieneelse',1,'p_tieneelse','marfle_yacc.py',364),
  ('genCuadIF -> <empty>','genCuadIF',0,'p_genCuadIF','marfle_yacc.py',367),
  ('acabaIF -> <empty>','acabaIF',0,'p_acabaIF','marfle_yacc.py',376),
  ('genCuadElse -> <empty>','genCuadElse',0,'p_genCuadElse','marfle_yacc.py',388),
  ('ciclo -> dowhile','ciclo',1,'p_ciclo','marfle_yacc.py',403),
  ('ciclo -> for','ciclo',1,'p_ciclo','marfle_yacc.py',404),
  ('ciclo -> while','ciclo',1,'p_ciclo','marfle_yacc.py',405),
  ('dowhile -> DO doMeteCont bloque WHILE LPAREN superexpresion RPAREN SEMCOL doTermina','dowhile',9,'p_dowhile','marfle_yacc.py',409),
  ('doMeteCont -> <empty>','doMeteCont',0,'p_doMeteCont','marfle_yacc.py',412),
  ('doTermina -> <empty>','doTermina',0,'p_doTermina','marfle_yacc.py',417),
  ('while -> WHILE meteContWhile LPAREN superexpresion RPAREN whileGeneraFalso bloque whileTermina','while',8,'p_while','marfle_yacc.py',427),
  ('meteContWhile -> <empty>','meteContWhile',0,'p_meteContWhile','marfle_yacc.py',430),
  ('whileGeneraFalso -> <empty>','whileGeneraFalso',0,'p_whileGeneraFalso','marfle_yacc.py',435),
  ('whileTermina -> <empty>','whileTermina',0,'p_whileTermina','marfle_yacc.py',444),
  ('for -> FOR LPAREN IDENTI dimension IGUAL exp SEMCOL superexpresion SEMCOL IDENTI dimension IGUAL exp RPAREN bloque','for',15,'p_for','marfle_yacc.py',459),
  ('dimension -> LCORCH exp RCORCH matriz','dimension',4,'p_dimension','marfle_yacc.py',463),
  ('dimension -> <empty>','dimension',0,'p_dimension','marfle_yacc.py',464),
  ('matriz -> LCORCH exp RCORCH','matriz',3,'p_matriz','marfle_yacc.py',468),
  ('matriz -> <empty>','matriz',0,'p_matriz','marfle_yacc.py',469),
  ('termino -> factor term','termino',2,'p_termino','marfle_yacc.py',473),
  ('term -> POR foundMUDI factor genCuadMUDI term','term',5,'p_term','marfle_yacc.py',476),
  ('term -> DIVISI foundMUDI factor genCuadMUDI term','term',5,'p_term','marfle_yacc.py',477),
  ('term -> <empty>','term',0,'p_term','marfle_yacc.py',478),
  ('foundMUDI -> <empty>','foundMUDI',0,'p_foundMUDI','marfle_yacc.py',481),
  ('genCuadMUDI -> <empty>','genCuadMUDI',0,'p_genCuadMUDI','marfle_yacc.py',488),
  ('factor -> LPAREN foundLP exp RPAREN foundRP','factor',5,'p_factor','marfle_yacc.py',508),
  ('factor -> menunario varcte','factor',2,'p_factor','marfle_yacc.py',509),
  ('menunario -> MENOS','menunario',1,'p_menunario','marfle_yacc.py',513),
  ('menunario -> <empty>','menunario',0,'p_menunario','marfle_yacc.py',514),
  ('foundLP -> <empty>','foundLP',0,'p_foundLP','marfle_yacc.py',517),
  ('foundRP -> <empty>','foundRP',0,'p_foundRP','marfle_yacc.py',522),
  ('modulo -> FUNC modtipo IDENTI semCreaMod LPAREN modparams RPAREN modbloque','modulo',8,'p_modulo','marfle_yacc.py',531),
  ('modtipo -> tipos','modtipo',1,'p_modtipo','marfle_yacc.py',535),
  ('modtipo -> VOID','modtipo',1,'p_modtipo','marfle_yacc.py',536),
  ('modparams -> tipos IDENTI foundParam masmodparams','modparams',4,'p_modparams','marfle_yacc.py',542),
  ('modparams -> <empty>','modparams',0,'p_modparams','marfle_yacc.py',543),
  ('foundParam -> <empty>','foundParam',0,'p_foundParam','marfle_yacc.py',545),
  ('masmodparams -> SEMCOL modparams','masmodparams',2,'p_masmodparams','marfle_yacc.py',556),
  ('masmodparams -> <empty>','masmodparams',0,'p_masmodparams','marfle_yacc.py',557),
  ('modbloque -> LBRACK vars modbloq RBRACK','modbloque',4,'p_modbloque','marfle_yacc.py',560),
  ('modbloq -> estatuto modbloq','modbloq',2,'p_modbloq','marfle_yacc.py',568),
  ('modbloq -> return modbloq','modbloq',2,'p_modbloq','marfle_yacc.py',569),
  ('modbloq -> varcte modbloq','modbloq',2,'p_modbloq','marfle_yacc.py',570),
  ('modbloq -> <empty>','modbloq',0,'p_modbloq','marfle_yacc.py',571),
  ('semCreaMod -> <empty>','semCreaMod',0,'p_semCreaMod','marfle_yacc.py',575),
  ('varcte -> otrasconst','varcte',1,'p_varcte','marfle_yacc.py',590),
  ('varcte -> cteid','varcte',1,'p_varcte','marfle_yacc.py',591),
  ('cteid -> IDENTI foundID funcdimobj','cteid',3,'p_cteid','marfle_yacc.py',594),
  ('funcdimobj -> LPAREN exp mascall RPAREN SEMCOL','funcdimobj',5,'p_funcdimobj','marfle_yacc.py',597),
  ('funcdimobj -> dimension','funcdimobj',1,'p_funcdimobj','marfle_yacc.py',598),
  ('funcdimobj -> PUNTO IDENTI dimobjcall','funcdimobj',3,'p_funcdimobj','marfle_yacc.py',599),
  ('mascall -> COMMA exp mascall','mascall',3,'p_mascall','marfle_yacc.py',602),
  ('mascall -> <empty>','mascall',0,'p_mascall','marfle_yacc.py',603),
  ('dimobjcall -> dimension','dimobjcall',1,'p_dimobjcall','marfle_yacc.py',606),
  ('dimobjcall -> LPAREN exp mascall RPAREN','dimobjcall',4,'p_dimobjcall','marfle_yacc.py',607),
  ('otrasconst -> CONFLO foundNUMFLO','otrasconst',2,'p_otrasconst','marfle_yacc.py',610),
  ('otrasconst -> CONINT foundNUMINT','otrasconst',2,'p_otrasconst','marfle_yacc.py',611),
  ('otrasconst -> conbol','otrasconst',1,'p_otrasconst','marfle_yacc.py',612),
  ('otrasconst -> CONSTR foundSTR','otrasconst',2,'p_otrasconst','marfle_yacc.py',613),
  ('foundNUMINT -> <empty>','foundNUMINT',0,'p_foundNUMINT','marfle_yacc.py',617),
  ('foundNUMFLO -> <empty>','foundNUMFLO',0,'p_foundNUMFLO','marfle_yacc.py',623),
  ('foundSTR -> <empty>','foundSTR',0,'p_foundSTR','marfle_yacc.py',629),
  ('conbol -> TRUE foundBOOL','conbol',2,'p_conbol','marfle_yacc.py',634),
  ('conbol -> FALSE foundBOOL','conbol',2,'p_conbol','marfle_yacc.py',635),
  ('foundBOOL -> <empty>','foundBOOL',0,'p_foundBOOL','marfle_yacc.py',638),
  ('tipo -> tipos','tipo',1,'p_tipo','marfle_yacc.py',644),
  ('tipo -> IDENTI isobject','tipo',2,'p_tipo','marfle_yacc.py',645),
  ('isobject -> <empty>','isobject',0,'p_isobject','marfle_yacc.py',648),
  ('tipos -> INT','tipos',1,'p_tipos','marfle_yacc.py',654),
  ('tipos -> FLOAT','tipos',1,'p_tipos','marfle_yacc.py',655),
  ('tipos -> STRING','tipos',1,'p_tipos','marfle_yacc.py',656),
  ('tipos -> BOOL','tipos',1,'p_tipos','marfle_yacc.py',657),
  ('expresion -> NOT exp','expresion',2,'p_expresion','marfle_yacc.py',676),
  ('expresion -> exp compara','expresion',2,'p_expresion','marfle_yacc.py',677),
  ('compara -> MENQUE foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',680),
  ('compara -> MAYQUE foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',681),
  ('compara -> DIFERE foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',682),
  ('compara -> MENIGU foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',683),
  ('compara -> MAYIGU foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',684),
  ('compara -> IGUIGU foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',685),
  ('compara -> <empty>','compara',0,'p_compara','marfle_yacc.py',686),
  ('foundComp -> <empty>','foundComp',0,'p_foundComp','marfle_yacc.py',689),
  ('exp -> termino expre','exp',2,'p_exp','marfle_yacc.py',705),
  ('expre -> MAS foundPLMI termino genCuadMUDI expre','expre',5,'p_expre','marfle_yacc.py',708),
  ('expre -> MENOS foundPLMI termino genCuadMUDI expre','expre',5,'p_expre','marfle_yacc.py',709),
  ('expre -> <empty>','expre',0,'p_expre','marfle_yacc.py',710),
  ('foundPLMI -> <empty>','foundPLMI',0,'p_foundPLMI','marfle_yacc.py',713),
  ('superexpresion -> expresion superexp','superexpresion',2,'p_superexpresion','marfle_yacc.py',722),
  ('superexp -> logicos','superexp',1,'p_superexp','marfle_yacc.py',725),
  ('superexp -> <empty>','superexp',0,'p_superexp','marfle_yacc.py',726),
  ('logicos -> andor expresion genCuadMUDI maslogicos','logicos',4,'p_logicos','marfle_yacc.py',729),
  ('andor -> AND foundANDOR','andor',2,'p_andor','marfle_yacc.py',732),
  ('andor -> OR foundANDOR','andor',2,'p_andor','marfle_yacc.py',733),
  ('foundANDOR -> <empty>','foundANDOR',0,'p_foundANDOR','marfle_yacc.py',736),
  ('maslogicos -> logicos','maslogicos',1,'p_maslogicos','marfle_yacc.py',744),
  ('maslogicos -> <empty>','maslogicos',0,'p_maslogicos','marfle_yacc.py',745),
]
