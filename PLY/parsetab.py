
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\x06\x03C\x96\x18T\xc3\xef=z\xf6\xf3r\x07\x82\x83'
    
_lr_action_items = {'VOID':([25,],[35,]),'INT':([6,7,9,10,25,41,46,47,48,51,57,59,65,83,124,148,187,],[-3,-3,18,-2,18,-47,-41,18,-41,18,-40,-39,18,-21,-11,18,18,]),'LBRACK':([3,4,5,11,21,27,49,52,64,111,116,140,218,235,252,264,290,298,299,],[-7,-8,6,-16,-13,38,-12,-10,75,-72,148,75,-65,-76,75,75,-67,75,75,]),'FALSE':([61,63,74,75,80,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,113,118,119,121,123,128,129,131,133,135,136,137,141,142,146,150,153,154,156,157,159,160,162,165,168,169,171,173,174,177,178,179,181,182,183,184,185,189,190,191,193,194,196,197,202,207,208,210,211,212,213,214,215,216,217,221,222,223,231,236,240,242,243,244,257,266,278,283,286,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,94,-92,-69,-28,-110,94,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,94,-124,94,-128,-126,-54,-92,94,-91,-93,-55,-122,-129,-130,-92,-125,-22,-123,-80,-92,-92,-82,-87,-87,-92,-153,-153,-92,-92,-75,-117,-113,-111,-92,-160,-160,-52,-148,-148,-148,-148,-148,-148,94,-79,-92,-92,-92,-92,-92,-92,-92,-80,-158,-159,-92,-92,-92,-92,-92,-92,94,94,94,-53,-56,-92,-92,-114,-120,-81,-59,-66,-77,-92,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'PRIVATE':([38,161,199,],[46,-43,46,]),'$end':([1,42,],[0,-1,]),'CONFLO':([61,63,74,75,80,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,113,118,119,121,123,128,129,131,133,135,136,137,141,142,146,150,153,154,156,157,159,160,162,165,168,169,171,173,174,177,178,179,181,182,183,184,185,189,190,191,193,194,196,197,202,207,208,210,211,212,213,214,215,216,217,221,222,223,231,236,240,242,243,244,257,266,278,283,286,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,90,-92,-69,-28,-110,90,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,90,-124,90,-128,-126,-54,-92,90,-91,-93,-55,-122,-129,-130,-92,-125,-22,-123,-80,-92,-92,-82,-87,-87,-92,-153,-153,-92,-92,-75,-117,-113,-111,-92,-160,-160,-52,-148,-148,-148,-148,-148,-148,90,-79,-92,-92,-92,-92,-92,-92,-92,-80,-158,-159,-92,-92,-92,-92,-92,-92,90,90,90,-53,-56,-92,-92,-114,-120,-81,-59,-66,-77,-92,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'MENQUE':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,145,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,184,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'NOT':([113,133,146,162,165,173,174,177,202,210,211,231,240,],[142,142,142,142,-75,142,-160,-160,142,-158,-159,-53,142,]),'PUNTO':([112,141,152,166,192,],[-54,170,-54,204,170,]),'DIFERE':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,145,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,182,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'STRING':([6,7,9,10,25,41,46,47,48,51,57,59,65,83,124,148,187,],[-3,-3,15,-2,15,-47,-41,15,-41,15,-40,-39,15,-21,-11,15,15,]),'TRUE':([61,63,74,75,80,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,113,118,119,121,123,128,129,131,133,135,136,137,141,142,146,150,153,154,156,157,159,160,162,165,168,169,171,173,174,177,178,179,181,182,183,184,185,189,190,191,193,194,196,197,202,207,208,210,211,212,213,214,215,216,217,221,222,223,231,236,240,242,243,244,257,266,278,283,286,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,91,-92,-69,-28,-110,91,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,91,-124,91,-128,-126,-54,-92,91,-91,-93,-55,-122,-129,-130,-92,-125,-22,-123,-80,-92,-92,-82,-87,-87,-92,-153,-153,-92,-92,-75,-117,-113,-111,-92,-160,-160,-52,-148,-148,-148,-148,-148,-148,91,-79,-92,-92,-92,-92,-92,-92,-92,-80,-158,-159,-92,-92,-92,-92,-92,-92,91,91,91,-53,-56,-92,-92,-114,-120,-81,-59,-66,-77,-92,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'AND':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,143,145,150,151,152,155,158,171,172,180,190,192,208,209,225,226,227,228,229,230,243,244,245,246,247,248,249,250,251,257,258,259,260,261,262,272,273,274,275,276,277,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,174,-147,-82,-90,-54,-83,-149,-111,-139,-140,-79,-80,-80,-88,-113,-88,-88,-94,-88,-88,-114,-120,174,-88,-88,-88,-88,-88,-88,-81,-86,-86,-89,-152,-152,-144,-146,-143,-142,-141,-145,-85,-84,-151,-150,-121,-112,]),'IGUAL':([55,68,81,112,141,150,169,190,257,],[-54,-80,123,-54,-80,-82,123,-79,-81,]),'OR':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,143,145,150,151,152,155,158,171,172,180,190,192,208,209,225,226,227,228,229,230,243,244,245,246,247,248,249,250,251,257,258,259,260,261,262,272,273,274,275,276,277,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,177,-147,-82,-90,-54,-83,-149,-111,-139,-140,-79,-80,-80,-88,-113,-88,-88,-94,-88,-88,-114,-120,177,-88,-88,-88,-88,-88,-88,-81,-86,-86,-89,-152,-152,-144,-146,-143,-142,-141,-145,-85,-84,-151,-150,-121,-112,]),'RCORCH':([40,50,85,88,90,91,94,98,104,106,108,117,120,122,128,129,131,135,137,150,151,152,155,158,171,190,192,208,224,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-49,60,126,-110,-127,-131,-131,-109,-124,-128,-126,150,-86,-152,-122,-129,-130,-125,-123,-82,-90,-54,-83,-149,-111,-79,-80,-80,257,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'MAIN':([12,19,23,24,32,61,63,74,149,253,],[-4,-6,-6,34,-5,-33,-36,-37,-95,-103,]),'DIVISI':([88,90,91,94,98,104,106,108,120,128,129,131,135,137,150,151,152,171,190,192,208,225,226,227,228,243,244,257,258,259,260,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,153,-122,-129,-130,-125,-123,-82,-90,-54,-111,-79,-80,-80,-113,-88,-88,-94,-114,-120,-81,153,153,-89,-121,-112,]),'MENIGU':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,145,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,179,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'POR':([88,90,91,94,98,104,106,108,120,128,129,131,135,137,150,151,152,171,190,192,208,225,226,227,228,243,244,257,258,259,260,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,154,-122,-129,-130,-125,-123,-82,-90,-54,-111,-79,-80,-80,-113,-88,-88,-94,-114,-120,-81,154,154,-89,-121,-112,]),'FUNC':([12,19,23,45,54,56,61,63,66,67,69,74,79,149,161,199,231,232,233,253,263,],[-4,25,25,-18,-20,25,-33,-36,-20,-17,25,-37,-19,-95,-43,-46,-53,-44,-38,-103,-45,]),'RPAREN':([39,43,65,78,88,90,91,94,98,104,106,108,115,120,122,128,129,131,133,135,137,143,145,147,150,151,152,155,158,163,164,166,171,172,175,176,180,186,187,188,190,192,195,200,203,205,208,209,219,225,226,227,228,229,230,231,238,241,243,244,245,246,247,248,249,250,251,257,258,259,260,261,262,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,287,288,293,295,297,301,305,306,],[49,52,-99,116,-110,-127,-131,-131,-109,-124,-128,-126,-100,-86,-152,-122,-129,-130,-58,-125,-123,-156,-147,-102,-82,-90,-54,-83,-149,201,-57,-80,-111,-139,-154,-155,-140,218,-99,-98,-79,-80,228,235,-60,239,-80,-88,-101,-113,-88,-88,-94,-88,-88,-53,-61,-118,-114,-120,-162,-88,-88,-88,-88,-88,-88,-81,-86,-86,-89,-152,-152,285,-116,-116,-161,-157,-144,-146,-143,-142,-141,-145,-85,-84,-151,-150,296,297,299,-118,-121,-116,-115,-112,]),'MENOS':([80,88,90,91,94,98,104,106,108,113,120,121,122,123,128,129,131,133,135,137,142,146,150,151,152,153,154,155,156,157,159,160,162,165,168,171,173,174,177,179,181,182,183,184,185,190,191,192,193,194,196,197,202,207,208,210,211,212,213,214,215,216,217,225,226,227,228,229,230,231,240,242,243,244,257,258,259,260,261,262,279,280,286,297,306,],[119,-110,-127,-131,-131,-109,-124,-128,-126,119,-86,-93,157,-55,-122,-129,-130,119,-125,-123,119,119,-82,-90,-54,-87,-87,-83,119,-153,-153,119,119,-75,-117,-111,119,-160,-160,-148,-148,-148,-148,-148,-148,-79,119,-80,119,119,119,119,119,119,-80,-158,-159,119,119,119,119,119,119,-113,-88,-88,-94,-88,-88,-53,119,119,-114,-120,-81,-86,-86,-89,157,157,-85,-84,119,-121,-112,]),'PRINT':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,103,-69,-28,-110,103,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,103,-124,103,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,-113,-111,-52,103,-79,-80,103,103,103,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'LCORCH':([22,55,60,68,71,112,141,150,152,166,192,208,],[30,-54,72,80,30,-54,80,191,-54,80,80,80,]),'ENDVAR':([41,51,161,199,],[-47,62,-43,234,]),'OBJECT':([6,7,83,124,],[8,8,-21,-11,]),'RBRACK':([33,45,54,56,61,63,66,67,69,70,74,75,76,79,82,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,104,105,106,107,108,112,127,128,129,131,132,134,135,136,137,141,149,150,161,169,171,178,189,190,199,208,220,221,222,223,231,232,233,236,243,244,253,254,255,256,257,263,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[42,-18,-20,-15,-33,-36,-20,-17,-15,83,-37,-24,-9,-19,-14,-69,-28,-110,-24,-127,-131,-31,-131,-23,-68,-29,-109,-70,-30,-32,-24,-124,-24,-128,136,-126,-54,-25,-122,-129,-130,-27,-26,-125,-22,-123,-80,-95,-82,-43,-113,-111,-52,-107,-79,-46,-80,253,-107,-107,-107,-53,-44,-38,-56,-114,-120,-103,-104,-106,-105,-81,-45,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'RETURN':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,113,-69,-28,-110,113,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,113,-124,113,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,-113,-111,-52,113,-79,-80,113,113,113,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'SEMCOL':([22,29,31,60,62,71,73,84,88,90,91,94,98,104,106,108,115,120,122,125,126,128,129,131,135,137,143,144,145,147,150,151,152,155,158,171,172,175,176,180,190,192,198,201,208,209,225,226,227,228,229,230,234,237,239,243,244,245,246,247,248,249,250,251,257,258,259,260,261,262,270,271,272,273,274,275,276,277,279,280,281,282,285,296,297,302,306,],[-35,-34,41,-51,74,-35,-48,-42,-110,-127,-131,-131,-109,-124,-128,-126,-100,-86,-152,161,-50,-122,-129,-130,-125,-123,-156,178,-147,187,-82,-90,-54,-83,-149,-111,-139,-154,-155,-140,-79,-80,231,236,-80,-88,-113,-88,-88,-94,-88,-88,263,265,266,-114,-120,-162,-88,-88,-88,-88,-88,-88,-81,-86,-86,-89,-152,-152,-161,-157,-144,-146,-143,-142,-141,-145,-85,-84,-151,-150,294,-119,-121,306,-112,]),'COMMA':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,241,243,244,257,258,259,260,261,262,268,269,279,280,281,282,295,297,301,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-118,-114,-120,-81,-86,-86,-89,-152,-152,286,286,-85,-84,-151,-150,-118,-121,286,-112,]),'CONSTR':([61,63,74,75,80,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,113,118,119,121,123,128,129,131,133,135,136,137,141,142,146,150,153,154,156,157,159,160,162,165,168,169,171,173,174,177,178,179,181,182,183,184,185,189,190,191,193,194,196,197,202,207,208,210,211,212,213,214,215,216,217,221,222,223,231,236,240,242,243,244,257,266,278,283,286,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,106,-92,-69,-28,-110,106,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,106,-124,106,-128,-126,-54,-92,106,-91,-93,-55,-122,-129,-130,-92,-125,-22,-123,-80,-92,-92,-82,-87,-87,-92,-153,-153,-92,-92,-75,-117,-113,-111,-92,-160,-160,-52,-148,-148,-148,-148,-148,-148,106,-79,-92,-92,-92,-92,-92,-92,-92,-80,-158,-159,-92,-92,-92,-92,-92,-92,106,106,106,-53,-56,-92,-92,-114,-120,-81,-59,-66,-77,-92,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'BOOL':([6,7,9,10,25,41,46,47,48,51,57,59,65,83,124,148,187,],[-3,-3,16,-2,16,-47,-41,16,-41,16,-40,-39,16,-21,-11,16,16,]),'PROGRAM':([0,],[2,]),'CONINT':([30,61,63,72,74,75,80,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,113,118,119,121,123,128,129,131,133,135,136,137,141,142,146,150,153,154,156,157,159,160,162,165,168,169,171,173,174,177,178,179,181,182,183,184,185,189,190,191,193,194,196,197,202,207,208,210,211,212,213,214,215,216,217,221,222,223,231,236,240,242,243,244,257,266,278,283,286,289,291,292,294,297,300,303,304,306,307,308,],[40,-33,-36,85,-37,108,-92,-69,-28,-110,108,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,108,-124,108,-128,-126,-54,-92,108,-91,-93,-55,-122,-129,-130,-92,-125,-22,-123,-80,-92,-92,-82,-87,-87,-92,-153,-153,-92,-92,-75,-117,-113,-111,-92,-160,-160,-52,-148,-148,-148,-148,-148,-148,108,-79,-92,-92,-92,-92,-92,-92,-92,-80,-158,-159,-92,-92,-92,-92,-92,-92,108,108,108,-53,-56,-92,-92,-114,-120,-81,-59,-66,-77,-92,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'IGUIGU':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,145,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,181,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'FLOAT':([6,7,9,10,25,41,46,47,48,51,57,59,65,83,124,148,187,],[-3,-3,14,-2,14,-47,-41,14,-41,14,-40,-39,14,-21,-11,14,14,]),'MAS':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,150,151,152,155,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,159,-122,-129,-130,-125,-123,-82,-90,-54,-83,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,159,159,-85,-84,-121,-112,]),'MAYQUE':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,145,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,183,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'FOR':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,109,-69,-28,-110,109,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,109,-124,109,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,-113,-111,-52,109,-79,-80,109,109,109,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'READ':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,110,-69,-28,-110,110,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,110,-124,110,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,-113,-111,-52,110,-79,-80,110,110,110,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'DO':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,111,-69,-28,-110,111,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,111,-124,111,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,-113,-111,-52,111,-79,-80,111,111,111,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'LPAREN':([11,21,34,44,53,80,93,103,109,110,112,113,114,121,123,130,133,141,142,146,152,153,154,156,157,159,160,162,165,168,173,174,177,179,181,182,183,184,185,191,192,193,194,196,197,202,206,207,208,210,211,212,213,214,215,216,217,231,240,242,286,],[-16,28,43,-108,65,121,-75,133,138,139,-54,121,146,-93,-55,162,121,168,121,121,-54,-87,-87,121,-153,-153,121,121,-75,-117,121,-160,-160,-148,-148,-148,-148,-148,-148,121,168,121,121,121,121,121,240,121,242,-158,-159,121,121,121,121,121,121,-53,121,121,121,]),'IDENTI':([2,6,7,8,9,10,13,14,15,16,17,18,20,26,28,35,36,37,41,45,46,47,48,51,54,57,58,59,61,63,66,74,75,77,80,83,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,113,118,119,121,123,124,128,129,131,133,135,136,137,138,139,141,142,146,148,150,153,154,156,157,159,160,161,162,165,168,169,170,171,173,174,177,178,179,181,182,183,184,185,189,190,191,193,194,196,197,199,202,204,207,208,210,211,212,213,214,215,216,217,221,222,223,231,232,233,236,240,242,243,244,257,263,265,266,278,283,284,286,289,291,292,294,297,300,303,304,306,307,308,],[3,-3,-3,11,20,-2,-132,-136,-137,-138,22,-135,-134,-133,39,-97,-96,44,-47,55,-41,20,-41,20,55,-40,71,-39,-33,-36,55,-37,112,115,-92,-21,-69,-28,-110,112,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,112,-124,112,-128,-126,-54,-92,152,-91,-93,-55,-11,-122,-129,-130,-92,-125,-22,-123,55,166,-80,-92,-92,20,-82,-87,-87,-92,-153,-153,-92,-43,-92,-75,-117,-113,208,-111,-92,-160,-160,-52,-148,-148,-148,-148,-148,-148,112,-79,-92,-92,-92,-92,-92,-46,-92,238,-92,-80,-158,-159,-92,-92,-92,-92,-92,-92,112,112,112,-53,-44,-38,-56,-92,-92,-114,-120,-81,-45,-76,-59,-66,-77,55,-92,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'MAYIGU':([88,90,91,94,98,104,106,108,120,122,128,129,131,135,137,145,150,151,152,155,158,171,190,192,208,225,226,227,228,229,230,243,244,257,258,259,260,261,262,279,280,281,282,297,306,],[-110,-127,-131,-131,-109,-124,-128,-126,-86,-152,-122,-129,-130,-125,-123,185,-82,-90,-54,-83,-149,-111,-79,-80,-80,-113,-88,-88,-94,-88,-88,-114,-120,-81,-86,-86,-89,-152,-152,-85,-84,-151,-150,-121,-112,]),'WHILE':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,167,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,93,-69,-28,-110,93,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,93,-124,93,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,206,-113,-111,-52,93,-79,-80,93,93,93,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'ELSE':([136,278,],[-22,290,]),'IF':([61,63,74,75,86,87,88,89,90,91,92,94,96,97,98,99,100,101,102,104,105,106,108,112,128,129,131,135,136,137,141,150,169,171,178,189,190,208,221,222,223,231,236,243,244,257,266,278,283,289,291,292,294,297,300,303,304,306,307,308,],[-33,-36,-37,114,-69,-28,-110,114,-127,-131,-31,-131,-68,-29,-109,-70,-30,-32,114,-124,114,-128,-126,-54,-122,-129,-130,-125,-22,-123,-80,-82,-113,-111,-52,114,-79,-80,114,114,114,-53,-56,-114,-120,-81,-59,-66,-77,-64,-62,-74,-73,-121,-71,-66,-77,-112,-63,-78,]),'PUBLIC':([38,161,199,],[48,-43,48,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'herencia':([21,],[27,]),'generaPARAM':([241,295,],[268,301,]),'objeto':([6,7,],[7,7,]),'acabaIF':([278,303,],[289,307,]),'objvarsagain':([199,],[233,]),'semCreaMod':([44,],[53,]),'modbloq':([189,221,222,223,],[220,254,255,256,]),'isobject':([20,],[26,]),'tammatriz':([60,],[73,]),'estatuto':([75,89,102,105,189,221,222,223,],[89,89,89,89,221,221,221,221,]),'prntparam':([133,],[163,]),'masAsign':([54,66,],[67,79,]),'bloque':([64,140,252,264,298,299,],[76,167,278,283,303,304,]),'matriz':([150,],[190,]),'foundANDOR':([174,177,],[210,211,]),'foundRP':([228,],[260,]),'cuadInicial':([4,],[5,]),'genCuadElse':([290,],[298,]),'main':([24,],[33,]),'semCreaDP':([3,],[4,]),'expresion':([113,133,146,162,173,202,240,],[143,143,143,143,209,143,143,]),'estret':([75,89,102,105,],[95,95,95,95,]),'term':([120,258,259,],[155,279,280,]),'dowhile':([75,89,102,105,189,221,222,223,],[96,96,96,96,96,96,96,96,]),'asignacion':([45,54,66,75,89,102,105,138,189,221,222,223,284,],[54,66,66,97,97,97,97,165,97,97,97,97,293,]),'otrasconst':([75,89,102,105,118,189,221,222,223,],[98,98,98,98,98,98,98,98,98,]),'expre':([122,261,262,],[158,281,282,]),'while':([75,89,102,105,189,221,222,223,],[99,99,99,99,99,99,99,99,]),'modtipo':([25,],[37,]),'doTermina':([294,],[300,]),'program':([0,],[1,]),'objvars':([38,199,],[45,232,]),'varcte':([75,89,102,105,118,189,221,222,223,],[102,102,102,102,151,222,222,222,222,]),'tamano':([22,71,],[29,29,]),'dimobj':([166,],[205,]),'ciclo':([75,89,102,105,189,221,222,223,],[101,101,101,101,101,101,101,101,]),'logicos':([143,245,],[176,270,]),'foundKeyword':([46,48,],[57,59,]),'tipos':([9,25,47,51,65,148,187,],[13,36,13,13,77,13,77,]),'whileTermina':([283,304,],[292,308,]),'progmod':([19,23,],[24,32,]),'resetPARAM':([296,],[302,]),'modbloque':([116,],[149,]),'bloq':([75,89,102,105,],[107,127,132,134,]),'exp':([80,113,133,142,146,156,160,162,173,191,202,207,212,213,214,215,216,217,240,242,286,],[117,145,145,172,145,195,198,145,145,224,145,241,246,247,248,249,250,251,145,269,295,]),'genCuadIF':([218,],[252,]),'iniciaMain':([52,],[64,]),'progvars':([9,],[19,]),'masmodparams':([147,],[188,]),'tipo':([9,47,51,148,],[17,58,17,17,]),'superexpresion':([113,133,146,162,202,240,],[144,164,186,200,237,267,]),'visibilidad':([38,199,],[47,47,]),'termino':([80,113,133,142,146,156,160,162,173,191,196,197,202,207,212,213,214,215,216,217,240,242,286,],[122,122,122,122,122,122,122,122,122,122,229,230,122,122,122,122,122,122,122,122,122,122,122,]),'meteContWhile':([93,165,],[130,202,]),'mascall':([268,269,301,],[287,288,305,]),'foundNUMINT':([108,],[137,]),'insertVar':([41,],[51,]),'for':([75,89,102,105,189,221,222,223,],[86,86,86,86,86,86,86,86,]),'lectura':([75,89,102,105,189,221,222,223,],[87,87,87,87,87,87,87,87,]),'cteid':([75,89,102,105,118,189,221,222,223,],[88,88,88,88,88,88,88,88,88,]),'doMeteCont':([111,],[140,]),'factor':([80,113,133,142,146,156,160,162,173,191,193,194,196,197,202,207,212,213,214,215,216,217,240,242,286,],[120,120,120,120,120,120,120,120,120,120,226,227,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'foundMUDI':([153,154,],[193,194,]),'dimobjcall':([208,],[243,]),'modparams':([65,187,],[78,219,]),'varsagain':([51,],[61,]),'superexp':([143,],[175,]),'foundComp':([179,181,182,183,184,185,],[212,213,214,215,216,217,]),'acabaOBJ':([83,],[124,]),'foundPLMI':([157,159,],[196,197,]),'whileGeneraFalso':([235,265,],[264,284,]),'foundLP':([121,],[156,]),'andor':([143,245,],[173,173,]),'genCuadMUDI':([209,226,227,229,230,246,247,248,249,250,251,],[245,258,259,261,262,272,273,274,275,276,277,]),'vartam':([22,71,],[31,84,]),'metearr':([40,],[50,]),'condicion':([75,89,102,105,189,221,222,223,],[100,100,100,100,100,100,100,100,]),'objmet':([56,69,],[70,82,]),'funcdimobj':([141,192,],[171,171,]),'escritura':([75,89,102,105,189,221,222,223,],[92,92,92,92,92,92,92,92,]),'maslogicos':([245,],[271,]),'modulo':([19,23,56,69,],[23,23,69,69,]),'vars':([9,51,148,],[12,63,189,]),'conbol':([75,89,102,105,118,189,221,222,223,],[104,104,104,104,104,104,104,104,104,]),'foundBOOL':([91,94,],[129,131,]),'foundNUMFLO':([90,],[128,]),'foundSTR':([106,],[135,]),'return':([75,89,102,105,189,221,222,223,],[105,105,105,105,223,223,223,223,]),'delVis':([161,],[199,]),'foundEQ':([123,],[160,]),'foundID':([55,112,152,],[68,141,192,]),'foundObjID':([11,],[21,]),'generaERA':([168,],[207,]),'compara':([145,],[180,]),'progobj':([6,7,],[9,10,]),'insertObjVar':([84,],[125,]),'vieneAsignacion':([45,],[56,]),'dimension':([68,141,166,192,208,],[81,169,203,225,244,]),'tieneelse':([278,],[291,]),'menunario':([80,113,133,142,146,156,160,162,173,191,193,194,196,197,202,207,212,213,214,215,216,217,240,242,286,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'foundParam':([115,],[147,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM IDENTI semCreaDP cuadInicial LBRACK progobj progvars progmod main RBRACK','program',10,'p_program','marfle_yacc.py',111),
  ('progobj -> objeto progobj','progobj',2,'p_progobj','marfle_yacc.py',115),
  ('progobj -> <empty>','progobj',0,'p_progobj','marfle_yacc.py',116),
  ('progvars -> vars','progvars',1,'p_progvars','marfle_yacc.py',119),
  ('progmod -> modulo progmod','progmod',2,'p_progmod','marfle_yacc.py',122),
  ('progmod -> <empty>','progmod',0,'p_progmod','marfle_yacc.py',123),
  ('semCreaDP -> <empty>','semCreaDP',0,'p_semCreaDP','marfle_yacc.py',127),
  ('cuadInicial -> <empty>','cuadInicial',0,'p_cuadInicial','marfle_yacc.py',135),
  ('main -> MAIN LPAREN RPAREN iniciaMain bloque','main',5,'p_main','marfle_yacc.py',142),
  ('iniciaMain -> <empty>','iniciaMain',0,'p_iniciaMain','marfle_yacc.py',145),
  ('objeto -> OBJECT IDENTI foundObjID herencia LBRACK objvars vieneAsignacion objmet RBRACK acabaOBJ','objeto',10,'p_objeto','marfle_yacc.py',152),
  ('herencia -> LPAREN IDENTI RPAREN','herencia',3,'p_herencia','marfle_yacc.py',155),
  ('herencia -> <empty>','herencia',0,'p_herencia','marfle_yacc.py',156),
  ('objmet -> modulo objmet','objmet',2,'p_objmet','marfle_yacc.py',159),
  ('objmet -> <empty>','objmet',0,'p_objmet','marfle_yacc.py',160),
  ('foundObjID -> <empty>','foundObjID',0,'p_foundObjID','marfle_yacc.py',163),
  ('vieneAsignacion -> asignacion masAsign','vieneAsignacion',2,'p_vieneAsignacion','marfle_yacc.py',169),
  ('vieneAsignacion -> <empty>','vieneAsignacion',0,'p_vieneAsignacion','marfle_yacc.py',170),
  ('masAsign -> asignacion masAsign','masAsign',2,'p_masAsign','marfle_yacc.py',173),
  ('masAsign -> <empty>','masAsign',0,'p_masAsign','marfle_yacc.py',174),
  ('acabaOBJ -> <empty>','acabaOBJ',0,'p_acabaOBJ','marfle_yacc.py',177),
  ('bloque -> LBRACK bloq RBRACK','bloque',3,'p_bloque','marfle_yacc.py',184),
  ('bloq -> estret','bloq',1,'p_bloq','marfle_yacc.py',187),
  ('bloq -> <empty>','bloq',0,'p_bloq','marfle_yacc.py',188),
  ('estret -> estatuto bloq','estret',2,'p_estret','marfle_yacc.py',191),
  ('estret -> return bloq','estret',2,'p_estret','marfle_yacc.py',192),
  ('estret -> varcte bloq','estret',2,'p_estret','marfle_yacc.py',193),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','marfle_yacc.py',197),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','marfle_yacc.py',198),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','marfle_yacc.py',199),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','marfle_yacc.py',200),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','marfle_yacc.py',201),
  ('vars -> tipo IDENTI vartam SEMCOL insertVar varsagain','vars',6,'p_vars','marfle_yacc.py',206),
  ('vartam -> tamano','vartam',1,'p_vartam','marfle_yacc.py',210),
  ('vartam -> <empty>','vartam',0,'p_vartam','marfle_yacc.py',211),
  ('varsagain -> vars','varsagain',1,'p_varsagain','marfle_yacc.py',214),
  ('varsagain -> ENDVAR SEMCOL','varsagain',2,'p_varsagain','marfle_yacc.py',215),
  ('objvars -> visibilidad tipo IDENTI vartam insertObjVar SEMCOL delVis objvarsagain','objvars',8,'p_objvars','marfle_yacc.py',218),
  ('visibilidad -> PUBLIC foundKeyword','visibilidad',2,'p_visibilidad','marfle_yacc.py',221),
  ('visibilidad -> PRIVATE foundKeyword','visibilidad',2,'p_visibilidad','marfle_yacc.py',222),
  ('foundKeyword -> <empty>','foundKeyword',0,'p_foundKeyword','marfle_yacc.py',225),
  ('insertObjVar -> <empty>','insertObjVar',0,'p_insertObjVar','marfle_yacc.py',230),
  ('delVis -> <empty>','delVis',0,'p_delVis','marfle_yacc.py',236),
  ('objvarsagain -> objvars','objvarsagain',1,'p_objvarsagain','marfle_yacc.py',241),
  ('objvarsagain -> ENDVAR SEMCOL','objvarsagain',2,'p_objvarsagain','marfle_yacc.py',242),
  ('objvarsagain -> <empty>','objvarsagain',0,'p_objvarsagain','marfle_yacc.py',243),
  ('insertVar -> <empty>','insertVar',0,'p_insertVar','marfle_yacc.py',246),
  ('tamano -> LCORCH CONINT metearr RCORCH tammatriz','tamano',5,'p_tamano','marfle_yacc.py',267),
  ('metearr -> <empty>','metearr',0,'p_metearr','marfle_yacc.py',273),
  ('tammatriz -> LCORCH CONINT RCORCH','tammatriz',3,'p_tammatriz','marfle_yacc.py',279),
  ('tammatriz -> <empty>','tammatriz',0,'p_tammatriz','marfle_yacc.py',280),
  ('return -> RETURN superexpresion SEMCOL','return',3,'p_return','marfle_yacc.py',288),
  ('asignacion -> IDENTI foundID dimension IGUAL foundEQ exp SEMCOL','asignacion',7,'p_asignacion','marfle_yacc.py',298),
  ('foundID -> <empty>','foundID',0,'p_foundID','marfle_yacc.py',312),
  ('foundEQ -> <empty>','foundEQ',0,'p_foundEQ','marfle_yacc.py',340),
  ('escritura -> PRINT LPAREN prntparam RPAREN SEMCOL','escritura',5,'p_escritura','marfle_yacc.py',345),
  ('prntparam -> superexpresion','prntparam',1,'p_prntparam','marfle_yacc.py',354),
  ('prntparam -> <empty>','prntparam',0,'p_prntparam','marfle_yacc.py',355),
  ('lectura -> READ LPAREN IDENTI dimobj RPAREN SEMCOL','lectura',6,'p_lectura','marfle_yacc.py',359),
  ('dimobj -> dimension','dimobj',1,'p_dimobj','marfle_yacc.py',362),
  ('dimobj -> PUNTO IDENTI','dimobj',2,'p_dimobj','marfle_yacc.py',363),
  ('condicion -> IF LPAREN superexpresion RPAREN genCuadIF bloque tieneelse','condicion',7,'p_condicion','marfle_yacc.py',367),
  ('tieneelse -> ELSE genCuadElse bloque acabaIF','tieneelse',4,'p_tieneelse','marfle_yacc.py',370),
  ('tieneelse -> acabaIF','tieneelse',1,'p_tieneelse','marfle_yacc.py',371),
  ('genCuadIF -> <empty>','genCuadIF',0,'p_genCuadIF','marfle_yacc.py',374),
  ('acabaIF -> <empty>','acabaIF',0,'p_acabaIF','marfle_yacc.py',383),
  ('genCuadElse -> <empty>','genCuadElse',0,'p_genCuadElse','marfle_yacc.py',395),
  ('ciclo -> dowhile','ciclo',1,'p_ciclo','marfle_yacc.py',410),
  ('ciclo -> for','ciclo',1,'p_ciclo','marfle_yacc.py',411),
  ('ciclo -> while','ciclo',1,'p_ciclo','marfle_yacc.py',412),
  ('dowhile -> DO doMeteCont bloque WHILE LPAREN superexpresion RPAREN SEMCOL doTermina','dowhile',9,'p_dowhile','marfle_yacc.py',416),
  ('doMeteCont -> <empty>','doMeteCont',0,'p_doMeteCont','marfle_yacc.py',419),
  ('doTermina -> <empty>','doTermina',0,'p_doTermina','marfle_yacc.py',424),
  ('while -> WHILE meteContWhile LPAREN superexpresion RPAREN whileGeneraFalso bloque whileTermina','while',8,'p_while','marfle_yacc.py',434),
  ('meteContWhile -> <empty>','meteContWhile',0,'p_meteContWhile','marfle_yacc.py',437),
  ('whileGeneraFalso -> <empty>','whileGeneraFalso',0,'p_whileGeneraFalso','marfle_yacc.py',442),
  ('whileTermina -> <empty>','whileTermina',0,'p_whileTermina','marfle_yacc.py',451),
  ('for -> FOR LPAREN asignacion meteContWhile superexpresion SEMCOL whileGeneraFalso asignacion RPAREN bloque whileTermina','for',11,'p_for','marfle_yacc.py',466),
  ('dimension -> LCORCH exp RCORCH matriz','dimension',4,'p_dimension','marfle_yacc.py',470),
  ('dimension -> <empty>','dimension',0,'p_dimension','marfle_yacc.py',471),
  ('matriz -> LCORCH exp RCORCH','matriz',3,'p_matriz','marfle_yacc.py',475),
  ('matriz -> <empty>','matriz',0,'p_matriz','marfle_yacc.py',476),
  ('termino -> factor term','termino',2,'p_termino','marfle_yacc.py',480),
  ('term -> POR foundMUDI factor genCuadMUDI term','term',5,'p_term','marfle_yacc.py',483),
  ('term -> DIVISI foundMUDI factor genCuadMUDI term','term',5,'p_term','marfle_yacc.py',484),
  ('term -> <empty>','term',0,'p_term','marfle_yacc.py',485),
  ('foundMUDI -> <empty>','foundMUDI',0,'p_foundMUDI','marfle_yacc.py',488),
  ('genCuadMUDI -> <empty>','genCuadMUDI',0,'p_genCuadMUDI','marfle_yacc.py',495),
  ('factor -> LPAREN foundLP exp RPAREN foundRP','factor',5,'p_factor','marfle_yacc.py',515),
  ('factor -> menunario varcte','factor',2,'p_factor','marfle_yacc.py',516),
  ('menunario -> MENOS','menunario',1,'p_menunario','marfle_yacc.py',520),
  ('menunario -> <empty>','menunario',0,'p_menunario','marfle_yacc.py',521),
  ('foundLP -> <empty>','foundLP',0,'p_foundLP','marfle_yacc.py',524),
  ('foundRP -> <empty>','foundRP',0,'p_foundRP','marfle_yacc.py',529),
  ('modulo -> FUNC modtipo IDENTI semCreaMod LPAREN modparams RPAREN modbloque','modulo',8,'p_modulo','marfle_yacc.py',538),
  ('modtipo -> tipos','modtipo',1,'p_modtipo','marfle_yacc.py',542),
  ('modtipo -> VOID','modtipo',1,'p_modtipo','marfle_yacc.py',543),
  ('modparams -> tipos IDENTI foundParam masmodparams','modparams',4,'p_modparams','marfle_yacc.py',549),
  ('modparams -> <empty>','modparams',0,'p_modparams','marfle_yacc.py',550),
  ('foundParam -> <empty>','foundParam',0,'p_foundParam','marfle_yacc.py',552),
  ('masmodparams -> SEMCOL modparams','masmodparams',2,'p_masmodparams','marfle_yacc.py',565),
  ('masmodparams -> <empty>','masmodparams',0,'p_masmodparams','marfle_yacc.py',566),
  ('modbloque -> LBRACK vars modbloq RBRACK','modbloque',4,'p_modbloque','marfle_yacc.py',569),
  ('modbloq -> estatuto modbloq','modbloq',2,'p_modbloq','marfle_yacc.py',572),
  ('modbloq -> return modbloq','modbloq',2,'p_modbloq','marfle_yacc.py',573),
  ('modbloq -> varcte modbloq','modbloq',2,'p_modbloq','marfle_yacc.py',574),
  ('modbloq -> <empty>','modbloq',0,'p_modbloq','marfle_yacc.py',575),
  ('semCreaMod -> <empty>','semCreaMod',0,'p_semCreaMod','marfle_yacc.py',579),
  ('varcte -> otrasconst','varcte',1,'p_varcte','marfle_yacc.py',594),
  ('varcte -> cteid','varcte',1,'p_varcte','marfle_yacc.py',595),
  ('cteid -> IDENTI foundID funcdimobj','cteid',3,'p_cteid','marfle_yacc.py',598),
  ('funcdimobj -> LPAREN generaERA exp generaPARAM mascall RPAREN resetPARAM SEMCOL','funcdimobj',8,'p_funcdimobj','marfle_yacc.py',601),
  ('funcdimobj -> dimension','funcdimobj',1,'p_funcdimobj','marfle_yacc.py',602),
  ('funcdimobj -> PUNTO IDENTI dimobjcall','funcdimobj',3,'p_funcdimobj','marfle_yacc.py',603),
  ('mascall -> COMMA exp generaPARAM mascall','mascall',4,'p_mascall','marfle_yacc.py',606),
  ('mascall -> <empty>','mascall',0,'p_mascall','marfle_yacc.py',607),
  ('generaERA -> <empty>','generaERA',0,'p_generaERA','marfle_yacc.py',610),
  ('generaPARAM -> <empty>','generaPARAM',0,'p_generaPARAM','marfle_yacc.py',617),
  ('resetPARAM -> <empty>','resetPARAM',0,'p_resetPARAM','marfle_yacc.py',626),
  ('dimobjcall -> dimension','dimobjcall',1,'p_dimobjcall','marfle_yacc.py',632),
  ('dimobjcall -> LPAREN exp mascall RPAREN','dimobjcall',4,'p_dimobjcall','marfle_yacc.py',633),
  ('otrasconst -> CONFLO foundNUMFLO','otrasconst',2,'p_otrasconst','marfle_yacc.py',636),
  ('otrasconst -> CONINT foundNUMINT','otrasconst',2,'p_otrasconst','marfle_yacc.py',637),
  ('otrasconst -> conbol','otrasconst',1,'p_otrasconst','marfle_yacc.py',638),
  ('otrasconst -> CONSTR foundSTR','otrasconst',2,'p_otrasconst','marfle_yacc.py',639),
  ('foundNUMINT -> <empty>','foundNUMINT',0,'p_foundNUMINT','marfle_yacc.py',643),
  ('foundNUMFLO -> <empty>','foundNUMFLO',0,'p_foundNUMFLO','marfle_yacc.py',649),
  ('foundSTR -> <empty>','foundSTR',0,'p_foundSTR','marfle_yacc.py',655),
  ('conbol -> TRUE foundBOOL','conbol',2,'p_conbol','marfle_yacc.py',660),
  ('conbol -> FALSE foundBOOL','conbol',2,'p_conbol','marfle_yacc.py',661),
  ('foundBOOL -> <empty>','foundBOOL',0,'p_foundBOOL','marfle_yacc.py',664),
  ('tipo -> tipos','tipo',1,'p_tipo','marfle_yacc.py',670),
  ('tipo -> IDENTI isobject','tipo',2,'p_tipo','marfle_yacc.py',671),
  ('isobject -> <empty>','isobject',0,'p_isobject','marfle_yacc.py',674),
  ('tipos -> INT','tipos',1,'p_tipos','marfle_yacc.py',683),
  ('tipos -> FLOAT','tipos',1,'p_tipos','marfle_yacc.py',684),
  ('tipos -> STRING','tipos',1,'p_tipos','marfle_yacc.py',685),
  ('tipos -> BOOL','tipos',1,'p_tipos','marfle_yacc.py',686),
  ('expresion -> NOT exp','expresion',2,'p_expresion','marfle_yacc.py',712),
  ('expresion -> exp compara','expresion',2,'p_expresion','marfle_yacc.py',713),
  ('compara -> MENQUE foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',716),
  ('compara -> MAYQUE foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',717),
  ('compara -> DIFERE foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',718),
  ('compara -> MENIGU foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',719),
  ('compara -> MAYIGU foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',720),
  ('compara -> IGUIGU foundComp exp genCuadMUDI','compara',4,'p_compara','marfle_yacc.py',721),
  ('compara -> <empty>','compara',0,'p_compara','marfle_yacc.py',722),
  ('foundComp -> <empty>','foundComp',0,'p_foundComp','marfle_yacc.py',725),
  ('exp -> termino expre','exp',2,'p_exp','marfle_yacc.py',741),
  ('expre -> MAS foundPLMI termino genCuadMUDI expre','expre',5,'p_expre','marfle_yacc.py',744),
  ('expre -> MENOS foundPLMI termino genCuadMUDI expre','expre',5,'p_expre','marfle_yacc.py',745),
  ('expre -> <empty>','expre',0,'p_expre','marfle_yacc.py',746),
  ('foundPLMI -> <empty>','foundPLMI',0,'p_foundPLMI','marfle_yacc.py',749),
  ('superexpresion -> expresion superexp','superexpresion',2,'p_superexpresion','marfle_yacc.py',758),
  ('superexp -> logicos','superexp',1,'p_superexp','marfle_yacc.py',761),
  ('superexp -> <empty>','superexp',0,'p_superexp','marfle_yacc.py',762),
  ('logicos -> andor expresion genCuadMUDI maslogicos','logicos',4,'p_logicos','marfle_yacc.py',765),
  ('andor -> AND foundANDOR','andor',2,'p_andor','marfle_yacc.py',768),
  ('andor -> OR foundANDOR','andor',2,'p_andor','marfle_yacc.py',769),
  ('foundANDOR -> <empty>','foundANDOR',0,'p_foundANDOR','marfle_yacc.py',772),
  ('maslogicos -> logicos','maslogicos',1,'p_maslogicos','marfle_yacc.py',780),
  ('maslogicos -> <empty>','maslogicos',0,'p_maslogicos','marfle_yacc.py',781),
]
